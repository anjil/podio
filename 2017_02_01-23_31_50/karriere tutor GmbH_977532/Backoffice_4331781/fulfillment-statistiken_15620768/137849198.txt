label: Report
field_id: 137849198
type: calculation
script: var jsnData= @[All of JSON-Module Details](out_137681390_120622004);
var oShow  = '';
var oData  = '';
var oItems = [];

var outputHeader = '| Lehrgang | On Time | Out of Time |<br>';
outputHeader += '|---|---|---|<br>';


var monthArr = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

var last12MonArr = [];

var t='~~';

try { 
  last12MonArr = getMonthArr();
  
  if(jsnData && jsnData!= '{}' && jsnData!= '[]'){ 
    getDetails(jsnData);
  }
  if(oItems){ t+='^^'
    printReport();
  }
       
}catch (e) {
  "Could not parse JSON";
}


function printReport(){  
  var tuples = [];
  for (var key in oItems) tuples.push([key, oItems[key]]);

  tuples.sort(function(aa, bb) {
     var y1 = aa[0];
     var y2 = bb[0];

     if (y1 < y2) return -1;
     if (y1 > y2) return 1;
     return 0;

  });


  for (var i = 0; i < tuples.length; i++) {
    var oComponent = tuples[i][0];  
    var oArrData   = tuples[i][1];       
    oData += '|**'+ oComponent +'**|&nbsp;|&nbsp;|<br>';
     
    for(var k=0; k<last12MonArr.length; k++){  
      var oRec  = oArrData[last12MonArr[k]].split('-');
       
      oData    += '|';       
      oData    += last12MonArr[k]+'|'; 
      oData    += oRec[0]+'|'; 
      oData    += oRec[1]+'|';  
      oData    += '<br>';      
    } 
  }
}

function getDetails(jsn){
  for(var i=0; i<jsn.length; i++){
    var jsArr = JSON.parse(jsn[i]);
    for(var k=0; k<jsArr.length; k++){               
      if(jsArr[k]['EndDate']){      
        var oComponent = jsArr[k]['ComponentName']||'';
        var oEndDate   = new Date(jsArr[k]['EndDate']);
        var oOutOfTime = jsArr[k]['OutOfTime'];
        var oMonYear   = monthArr[oEndDate.getMonth()]+'-'+oEndDate.getFullYear();

        if(oComponent != ""){
          var tempKey = oComponent; 
          if(oItems[tempKey]){
            var arr         = oItems[tempKey];
            if(arr[oMonYear]){
              var sArr        = arr[oMonYear].split('-');
              var oVal        = 0;   
              if(oOutOfTime == 0){
                oVal          = parseInt(sArr[0]) + 1;
                arr[oMonYear] = oVal+'-'+sArr[1]; 
              }
              if(oOutOfTime == 1){
                oVal          = parseInt(sArr[1]) + 1;
                arr[oMonYear] = sArr[0]+'-'+oVal; 
              }
            
              oItems[tempKey] = arr; 
            }  
            else{
              t+='~~'+oMonYear // future records which are not displaying
            }              
          } 
          else{
            var arr = [];
            arr[last12MonArr[0]]   = '0-0';
            arr[last12MonArr[1]]   = '0-0';
            arr[last12MonArr[2]]   = '0-0';
            arr[last12MonArr[3]]   = '0-0';
            arr[last12MonArr[4]]   = '0-0';
            arr[last12MonArr[5]]   = '0-0';
            arr[last12MonArr[6]]   = '0-0';
            arr[last12MonArr[7]]   = '0-0';
            arr[last12MonArr[8]]   = '0-0';
            arr[last12MonArr[9]]   = '0-0';
            arr[last12MonArr[10]]  = '0-0';
            arr[last12MonArr[11]]  = '0-0';
            
            if(oOutOfTime == 0){
              arr[oMonYear]  = '1-0';
            }
            if(oOutOfTime == 1){
              arr[oMonYear]  = '0-1';
            }

            oItems[tempKey] =  arr;
          } 
        }                   
      }
    }
  }
}


function getMonthArr(){
  var arr = [];
  var dt  = new Date();
  var Mon = dt.getMonth();
  var Yr  = dt.getFullYear();
  arr[0]  = monthArr[Mon]+'-'+Yr;
  
  for(var i=1; i<=11; i++){
    Mon = Mon - 1;
    if(Mon < 0){
      Mon = 11;
      Yr  = dt.getFullYear() - 1;
    }
    arr[i]  = monthArr[Mon]+'-'+Yr;
  }
  return arr;
}

if(oData){
  oShow = outputHeader + oData;
}

oShow+' ';

