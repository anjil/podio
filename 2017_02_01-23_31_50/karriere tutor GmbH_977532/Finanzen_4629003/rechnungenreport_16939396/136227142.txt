label: Weekly Report
field_id: 136227142
type: calculation
script: var json       = @[All of JSON-Rechnungen](in_132148137_132049808)||[];
var jsExpTR    = @[All of JSON-Erwartete-Zahlungseingange](in_125563047_132230279)||[];
var jsExpLZ    = @[All of JSON-RechnungenReport](in_132709250_132703747)||[];
var bnkAmt     = @[Banking Amount](field_132049710)||0;
var showExpLz  = @[ Show Expected License ](field_134819905) ||'';
var oData      = '';
var oShow      = '';
var oBalance   = bnkAmt;
var oHeader    ='|**Name**|**Date**|**Amount**|**Balance**|<br>';
oHeader       +='|--------|--------:|----------:|-----------:|<br>';

var t='~~~'

  
  
var WeekTotEXPAmt      = 0;
var WeekTotLICnBILLAmt = 0;  
var weekTotBALAmt      = bnkAmt;

var oArrDate    = [];
var oArrTempDt  = [];
var oArrExpTR   = [];
var oShowData   = '';
var oPrvWeek    = -1; 
var oPrvYear    = 0;
var firstHeader = 0;

try{   
   var myArray = getData(json,jsExpTR);
   printData(myArray);   
  
}catch (e) {
  "Could not parse JSON";
}

function getRange(oY,oW){ 
  if(oY && oW){
    var fDate = firstDate(oY, oW);
    var sDate = secondDate(fDate,oW)
  
    var sDate = moment(fDate).format("dd DD.MM")+' - '+moment(sDate).format("dd DD.MM");
  return sDate;
  }
  else return '';
}

function firstDate(year, wn){
  var Day10 = new Date( year,0,10,12,0,0),
      Day4  = new Date( year,0,4,12,0,0),
  weekmSec  = Day4.getTime() - Day10.getDay() * 86400000;  
  return new Date(weekmSec + ((wn - 1)  * 7 ) * 86400000);   
}

function secondDate(dt,oWeek){
  var week = oWeek;
  var d    = new Date(dt);
  var lastday = new Date(d.setDate(d.getDate() - d.getDay()+7));
  return lastday;
}


function printData(myArray){    
 var tuples  = [];
 for (var key in oArrExpTR) tuples.push([key, oArrExpTR[key]]);

 tuples.sort(function(aa, bb) {
    var y1 = aa[1]['Date'];
    var y2 = bb[1]['Date'];

    if (y1 < y2) return -1;
    if (y1 > y2) return 1;
    return 0;

 });
    
 myArray.sort(function(a, b) {
    a = new Date(a['Date']);
    b = new Date(b['Date']);
    return a < b ? -1 : (a > b ? 1 : 0);
 });
 
 oArrDate.sort(function(date1,date2) {
     if (date1 < date2) return -1;
     if (date1 > date2) return 1;
     return 0;
 });


 for(var idt=0; idt<oArrDate.length; idt++){
   var unqDate = new Date(oArrDate[idt]);
   var cUdate  = moment(unqDate).format("DD.MM.YY");
   var uWeek   = getWeekNumber(unqDate);
   var uYear   = unqDate.getFullYear();

   if(oPrvWeek == -1){
     oPrvWeek = uWeek;
     oPrvYear = uYear;
   }
   
   if(oPrvWeek < uWeek){
     if(oData !=''){

     var weekR = getRange(oPrvYear,oPrvWeek);

     oShowData +='|**Woche'+oPrvWeek+':'+weekR+'**|**Date**|**Amount**|**Balance**|<br>';
       if(firstHeader == 0){
         oShowData  +='|----|----:|----:|----:|<br>';
         firstHeader =1;
       }
       oShowData += oData;
       
       weekTotBALAmt          = weekTotBALAmt + WeekTotEXPAmt;
       weekTotBALAmt          = weekTotBALAmt - WeekTotLICnBILLAmt;

       var shWeekTotEXPAmt      = '+'+currencyFormatDE(WeekTotEXPAmt); 
       var shWeekTotLICnBILLAmt = '-'+currencyFormatDE(WeekTotLICnBILLAmt);
       var shweekTotBALAmt      = currencyFormatDE(weekTotBALAmt);        

 oShowData +='|**Total of Woche: '+oPrvWeek+'**|**'+shWeekTotEXPAmt+'**|**'+shWeekTotLICnBILLAmt+'**|**'+shweekTotBALAmt+'**|<br>';
oShowData  +='|----|----|----|----|<br>';

       oData              = '';
       WeekTotEXPAmt      = 0;
       WeekTotLICnBILLAmt = 0;
     }
     oPrvWeek   = uWeek;
     oPrvYear   = uYear;    
   }
   else if(oPrvWeek > uWeek && oPrvYear < uYear){
     if(oData !=''){
       var weekR = getRange(oPrvYear,oPrvWeek);

     oShowData +='|**Woche'+oPrvWeek+':'+weekR+'**|**Date**|**Amount**|**Balance**|<br>';
       if(firstHeader == 0){
         oShowData  +='|----|----:|----:|----:|<br>';
         firstHeader =1;
       }
       oShowData += oData;

       weekTotBALAmt          = weekTotBALAmt + WeekTotEXPAmt;
       weekTotBALAmt          = weekTotBALAmt - WeekTotLICnBILLAmt;

       var shWeekTotEXPAmt      = '+'+currencyFormatDE(WeekTotEXPAmt); 
       var shWeekTotLICnBILLAmt = '-'+currencyFormatDE(WeekTotLICnBILLAmt);
       var shweekTotBALAmt      = currencyFormatDE(weekTotBALAmt);  

 oShowData +='|**Total of Woche: '+oPrvWeek+'**|**'+shWeekTotEXPAmt+'**|**'+shWeekTotLICnBILLAmt+'**|**'+shweekTotBALAmt+'**|<br>';
oShowData  +='|----|----|----|----|<br>';

       oData              = '';
       WeekTotEXPAmt      = 0;
       WeekTotLICnBILLAmt = 0;
     }
     oPrvWeek   = uWeek;
     oPrvYear   = uYear;     
   }

   for(var iExp = 0; iExp<tuples.length; iExp++){
     var oTVal     = tuples[iExp][1];   
     var ExpDate   = new Date(oTVal['Date']);
     var ExpWeek   = oTVal['Week'];

     var oChkDate  = dateCompair(ExpDate);
     if(oChkDate == 1){
       var cExpDate = moment(ExpDate).format("DD.MM.YY")
       if(cExpDate == cUdate){
         var shwDt   = moment(ExpDate).format("DD.MM.YY");
         var ExpAmt  = oTVal['Amount'];
         oBalance    = oBalance + ExpAmt;
         WeekTotEXPAmt += parseFloat(ExpAmt);
           
         var sAmt    = '+'+currencyFormatDE(ExpAmt); 
         var sBal    = currencyFormatDE(oBalance);
         oData      += '|';
         oData      += 'Expected banking amount'  +'|';
         oData      += shwDt  +'|';
         oData      += sAmt   +'|'; 
         oData      += sBal   +'|<br>'; 
       }
     }
   }

   for(var i=0; i<myArray.length; i++){                
     var oName    = myArray[i]['Name'];
     var oAmt     = myArray[i]['Amount'];
     var oDate    = myArray[i]['Date'];
     var oWeek    = myArray[i]['Week'];
     var oYear    = myArray[i]['Year'];
     var oTag     = myArray[i]['Tag'];
     var oid      = myArray[i]['id']; 
     if(oName){
       if(oName.length>45){
         oName = oName.substring(0,45);
       }
     }

     var myArrDate = new Date(oDate);  
     var cMyArrDate = moment(myArrDate).format("DD.MM.YY")
     if(cMyArrDate == cUdate){
           
       if(oTag == 'Lic'){
         var oChkDate = dateCompair(oDate); 
         if(oChkDate == 1){ 
           var licDate = new Date(oDate);
           var sAmt = 0;
           var sBal = 0;
           var setD = null;
           var shwDt= null;
           oBalance = oBalance - oAmt;
           WeekTotLICnBILLAmt += parseFloat(oAmt);

           sAmt     = '-'+currencyFormatDE(oAmt); 
           sBal     = currencyFormatDE(oBalance);
           setD     = licDate;
           shwDt    = moment(setD).format("DD.MM.YY");
        
           oData      += '|';
           oData      += oName  +'|';
           oData      += shwDt  +'|';
           oData      += sAmt   +'|'; 
           oData      += sBal   +'|<br>'; 
         }
       } 

       if(oTag == 'Bill'){
         var oChkDate = dateCompairBill(oDate); 
         if(oChkDate == 1){ 
           var BillDate = new Date(oDate);
           var sAmt = 0;
           var sBal = 0;
           var setD = null;
           var shwDt= null;
           oBalance = oBalance - oAmt;
           WeekTotLICnBILLAmt += parseFloat(oAmt);

           sAmt     = '-'+currencyFormatDE(oAmt); 
           sBal     = currencyFormatDE(oBalance);
           setD     = BillDate;
           shwDt    = moment(setD).format("DD.MM.YY");
 var oUrl = 'https://podio.com/karrieretutorde/finance/apps/rechnungen/items/'+oid;
        
           oData      += '|';
           oData      += oName.link(oUrl)  +'|';
           oData      += shwDt  +'|';
           oData      += sAmt   +'|'; 
           oData      += sBal   +'|<br>'; 
         }
       } 
     }
   }             
 }

 if(oData!=''){ 
  var weekR = getRange(oPrvYear,oPrvWeek);

 oShowData +='|**Woche'+oPrvWeek+':'+weekR+'**|**Date**|**Amount**|**Balance**|<br>';
     
   oShowData += oData;
   weekTotBALAmt          = weekTotBALAmt + WeekTotEXPAmt;
   weekTotBALAmt          = weekTotBALAmt - WeekTotLICnBILLAmt;

   var shWeekTotEXPAmt      = '+'+currencyFormatDE(WeekTotEXPAmt); 
   var shWeekTotLICnBILLAmt = '-'+currencyFormatDE(WeekTotLICnBILLAmt);
   var shweekTotBALAmt      = currencyFormatDE(weekTotBALAmt);  

 oShowData +='|**Total of Woche: '+oPrvWeek+'**|**'+shWeekTotEXPAmt+'**|**'+shWeekTotLICnBILLAmt+'**|**'+shweekTotBALAmt+'**|<br>';
oShowData  +='|----|----|----|----|<br>';

       oData              = '';
       WeekTotEXPAmt      = 0;
       WeekTotLICnBILLAmt = 0;   
 }
}


function getData(json,jsExpTR){
  var tempArr     = [];
  var arr         = {};
  var ind         = 0;
  if(json && json!='{}' && json!='[]'){
    for(var i=0; i<json.length; i++){
      if(json[i] && json[i]!='{}' && json[i]!='[]'){
        var js = JSON.parse(json[i]);
        for(var k=0; k<js.length; k++){  
          var disJson    = 1;
          var bezahlt    = js[k].bezahlt;  
          if(js[k].Date){
            if(bezahlt){
              if(bezahlt == 'Bezahlt') disJson = 0;
              if(bezahlt == 'Offen')   disJson = 1;
            }
            var chkDisplay = checkForDispalyData(disJson, 
                                                 js[k].Date,
                                                 js[k].PayDate);
            if(chkDisplay == 1){       
              var odts       = new Date(js[k].Date);
              var currDts    = new Date();          
              arr['Name']    = js[k].Name;
              arr['Amount']  = js[k].Amount; 
              if(currDts.getTime() > odts.getTime()){
                var setD     = getWeekStart(currDts);   
                arr['Date']  = setD;  
                arr['Week']  = parseInt(getWeekNumber(setD));
                arr['Year']  = setD.getFullYear();  
                var tempDt   = moment(setD).format("DD.MM.YY");
                if(oArrTempDt.length > 0){                     
                  if(oArrTempDt.indexOf(tempDt) == -1){
                    oArrTempDt.push(tempDt);
                    oArrDate.push(new Date(setD));   
                  }
                }      
                else{
                  oArrTempDt.push(tempDt);
                  oArrDate.push(new Date(setD));   
                }          
              }
              else{
                var setD     = getWeekStart(odts);  
                arr['Date']  = setD; 
                arr['Week']  = parseInt(getWeekNumber(setD));
                arr['Year']  = setD.getFullYear();
                var tempDt   = moment(setD).format("DD.MM.YY");
                if(oArrTempDt.length > 0){                     
                  if(oArrTempDt.indexOf(tempDt) == -1){
                    oArrTempDt.push(tempDt);
                    oArrDate.push(new Date(setD));    
                  }
                }      
                else{
                  oArrTempDt.push(tempDt);
                  oArrDate.push(new Date(setD));   
                }   
              }
              arr['id']      = js[k].id; 
              arr['Tag']     = 'Bill';          
              tempArr[ind]   = arr;
              arr            = {}; 
              ind++;  
            }
          }     
        }
      } 
    }
  }
  if(jsExpTR && jsExpTR!='{}' && jsExpTR!='[]'){ 
    for(var i=0; i<jsExpTR.length; i++){
      if(jsExpTR[i] && jsExpTR[i]!='{}' && jsExpTR[i]!='[]'){
        var js           = JSON.parse(jsExpTR[i]);  
        var trPaid       = js.TransactionPaid;     
        if(trPaid.trim() == 'n' && js.Date){
           var setD      = getWeekStart(js.Date);   

           var tKey = moment(setD).format("DD.MM.YY");
           if(oArrExpTR[tKey]){
             var arr1        = oArrExpTR[tKey]; 
             var EAmt        = parseFloat(arr1['Amount'])+js.Amount;
             arr1['Amount']  = EAmt;
             oArrExpTR[tKey] = arr1;  
           }
           else{
             var arr1     = {};         
             arr1['Name']    = js.Name;
             arr1['Amount']  = js.Amount; 
             arr1['Date']    = setD;
             arr1['Week']    = parseInt(getWeekNumber(setD));
             arr1['Year']    = setD.getFullYear();
             arr1['id']      = ''; 
             arr1['Tag']     = 'Bank';  
             oArrExpTR[tKey] = arr1;  
                          
             var tempDt = moment(setD).format("DD.MM.YY");
             if(oArrTempDt.length > 0){                     
               if(oArrTempDt.indexOf(tempDt) == -1){
                 oArrTempDt.push(tempDt);
                 oArrDate.push(new Date(setD));   
               }
             }      
             else{
               oArrTempDt.push(tempDt);
               oArrDate.push(new Date(setD));   
             }      
           }
        }    
      }
    } 
  }

   




  if(showExpLz == '' || showExpLz == 'On'){
    if(jsExpLZ && jsExpLZ!='{}' && jsExpLZ!='[]'){
      var tArr = Array();
      for(var i=0; i<jsExpLZ.length; i++){
        if(jsExpLZ[i] && jsExpLZ[i]!='{}' && jsExpLZ[i]!='[]'){
          var js           = JSON.parse(jsExpLZ[i]); 
          var licAmt       = js.Amount  || 0 ;
          var Lizenze      = js.Lizenze || '';
          var Rate         = js.Rate    || '';
          if(js.Date){
            if(Lizenze!='' || Rate!=''){
              var oName        = js.Lizenzen+' : '+js.Rate;
              var dt           = new Date(js.Date); 
              var tKey         = js.Lizenzen+'^'+js.Rate+'^'+dt.getTime();     

              if(tArr[tKey]){           
                var z         = tArr[tKey]; 
                z['Amount']   = parseFloat(z['Amount'])+parseFloat(licAmt);
                tArr['Amount']= z;
              } 
              else{  
                var z        = [];
                z['Name']    = oName; 
                z['Amount']  = js.Amount; 
                z['Date']    = new Date(js.Date);          
                tArr[tKey]   = z;
              }
            }   
          }
        }
      }
      if(tArr){
        var tuples = [];
        for (var key in tArr) tuples.push([key, tArr[key]]); 
          for (var i = 0; i < tuples.length; i++) { 
            var oTKey      = tuples[i][0];   
            var oTVal      = tuples[i][1]; 
            var setD       = getWeekStart(oTVal['Date']);   
            arr['Name']    = oTVal['Name']; 
            arr['Amount']  = parseFloat(oTVal['Amount'])||0;  
            arr['Date']    = setD;
            arr['Week']    = parseInt(getWeekNumber(setD));
            arr['Year']    = setD.getFullYear();
            arr['id']      = ''; 
            arr['Tag']     = 'Lic';          
            tempArr[ind]   = arr;
            arr            = {}; 
            ind++;   

            var tempDt   = moment(setD).format("DD.MM.YY");
            if(oArrTempDt.length > 0){                     
              if(oArrTempDt.indexOf(tempDt) == -1){
                oArrTempDt.push(tempDt);
                oArrDate.push(new Date(setD));    
              }
            }      
            else{
              oArrTempDt.push(tempDt);
              oArrDate.push(new Date(setD));  
            } 
          }
        } 
      }
    }  
  return tempArr;   
}


function getWeekNumber(t) {
  var date = new Date(t.getTime());
   date.setHours(0, 0, 0, 0);
 
  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
 
  var week1 = new Date(date.getFullYear(), 0, 4);
 
  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000- 3 + (week1.getDay() + 6) % 7) / 7);
}


function checkForDispalyData(pStatus, oE, pDate){
  if(pStatus == 1){
    return 1;
  }
  else{
    var d1 = new Date(oE);
    var d3 = (pDate) ? new Date(pDate) : new Date();
    if (d1.getTime()< d3.getTime()) {
      return 0;
    }   
    else{
      return 1;
    }
  }   
}


function currencyFormatDE(num) {
    return num
       .toFixed(2)
       .replace(".", ",") 
       .replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.") + " €"; 
}

function getWeekStart(d){
  var odt       = new Date(d);
  var odays     = 0;
  if(odt.getDay()==0) odays = 1;
  if(odt.getDay()==6) odays = 2;
  
  odt.setDate(odt.getDate() + (odays)); 
  return new Date(odt);
}

function dateCompairBill(oE){
  var d1 = new Date(oE); 
  var d3 = new Date();
  d3.setDate(d3.getDate() + 42);
  if (d1.getTime()<= d3.getTime()) {
    return 1;
  }   
  else{
    return 0;
  }
}


function dateCompair(oE){
  var d1 = new Date(oE); 
  var d2 = new Date();
  var d3 = new Date();
  d3.setDate(d3.getDate() + 42);
  if (d1.getTime()>= d2.getTime() && d1.getTime()<= d3.getTime()) {
    return 1;
  }   
  else{
    return 0;
  }
}

oShow = oShowData;
