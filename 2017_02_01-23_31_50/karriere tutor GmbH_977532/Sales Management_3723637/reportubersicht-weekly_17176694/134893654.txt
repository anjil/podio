label: Report Weekly by Owner
field_id: 134893654
type: calculation
script: var jsnL   = @[All of JSON-leads-und-anstehende-lehrgangsstarts](in_126634106_134090920);
var jsnS   = @[All of JSON-leads-und-anstehende-lehrgangsstarts](in_126634106_134090921);
var oWeeks = @[Week](field_134089176);
var oShow = '';
var oData = '';
//var outputHeader = '| Maßn. Kategorie| Leads | Umsatz | Betrag |<br>';
//outputHeader += '|---|:---:|:---:|---:|<br>';

oData = '| Maßn. Kategorie| Leads | Umsatz | Betrag |<br>';
oData += '|---|:---:|:---:|---:|<br>';

var oArrSize                                    =  0;
var sortOrderArr                                = [];
sortOrderArr['IT Modular > 8K']                 =  0;    oArrSize ++;
sortOrderArr['Scrum IT Modular > 8K']           =  1;    oArrSize ++;
sortOrderArr['IT Modular 3-8K']                 =  2;    oArrSize ++;
sortOrderArr['Scrum IT Modular 3-8K']           =  3;    oArrSize ++;
sortOrderArr['IT Modular <3K']                  =  4;    oArrSize ++;
sortOrderArr['Scrum IT Modular <3K']            =  5;    oArrSize ++;
sortOrderArr['Scrum']                           =  6;    oArrSize ++;
sortOrderArr['Six Sigma Black Belt']            =  7;    oArrSize ++;
sortOrderArr['Scrum Six Sigma Black Belt']      =  8;    oArrSize ++;
sortOrderArr['Six Sigma Black Belt IT']         =  9;    oArrSize ++;
sortOrderArr['Scrum Six Sigma Black Belt IT']   =  10;   oArrSize ++;
sortOrderArr['Six Sigma Green Belt']            =  11;   oArrSize ++;
sortOrderArr['Scrum Six Sigma Green Belt']      =  12;   oArrSize ++;
sortOrderArr['Six Sigma Green Belt IT']         =  13;   oArrSize ++;
sortOrderArr['Scrum Six Sigma Green Belt IT']   =  14;   oArrSize ++;
sortOrderArr['OMM einzeln']                     =  15;   oArrSize ++;
sortOrderArr['Scrum OMM']                       =  16;   oArrSize ++;
sortOrderArr['OMM Modular']                     =  17;   oArrSize ++;
sortOrderArr['Scrum OMM Modular']               =  18;   oArrSize ++;
sortOrderArr['Modular OMM (Ohne OMM)']          =  19;   oArrSize ++;
sortOrderArr['Scrum Modular OMM (Ohne OMM)']    =  20;   oArrSize ++;
sortOrderArr['Scrum OMM IT']                    =  21;   oArrSize ++;
sortOrderArr['Scrum Modular OMM (Ohne OMM) IT'] =  22;   oArrSize ++;
sortOrderArr['OMM sonst']                       =  23;   oArrSize ++;
sortOrderArr['BDM']                             =  24;   oArrSize ++;
sortOrderArr['Scrum BDM']                       =  25;   oArrSize ++;
sortOrderArr['BDM Six Sigma Black Belt']        =  26;   oArrSize ++;
sortOrderArr['BDM Six Sigma Green Belt']        =  27;   oArrSize ++;
sortOrderArr['BDM sonst']                       =  28;   oArrSize ++;
sortOrderArr['SAP']                             =  29;   oArrSize ++;
sortOrderArr['Scrum SAP']                       =  30;   oArrSize ++;
sortOrderArr['SAP Finanzen']                    =  31;   oArrSize ++;
sortOrderArr['Finanzen']                        =  32;   oArrSize ++;
sortOrderArr['sonst']                           =  33;   oArrSize ++;
sortOrderArr['Sonst Modular']                   =  34;   oArrSize ++;

//sortOrderArr['BDM IT']                          =  28;   oArrSize ++;
//sortOrderArr['OMM (ohne OMM)']                  =  19;   oArrSize ++;
//sortOrderArr['Scrum Sonst Modular']             =  34;   oArrSize ++;

var oItems  = [];
var oLOwner = [];

var t='~~';
try {
  if(jsnL && jsnL != '{}' && oWeeks){
     getDetails(jsnL);
  }
  if(jsnS && jsnS != '{}' && oWeeks){
     getDetails2(jsnS);
     getDetails3(jsnS);
  }
  if(oItems){  
     printReport();
  }
       
}catch (e) {
  "Could not parse JSON";
}

function printReport(){  
  var tuples = [];
  for (var key in oItems) tuples.push([key, oItems[key]]);

  tuples.sort(function(aa, bb) {
     var y1 = aa[1]['sortOrder'];
     var y2 = bb[1]['sortOrder'];

     if (y1 < y2) return -1;
     if (y1 > y2) return 1;
     return 0;

  });

  oLOwner.sort();
 
  var oLeadsTotal = 0;
  var oSalesTotal = 0;
  var oAmtTotal   = 0;
  var pr          = 0;
  for(k=0; k<oLOwner.length; k++){
    var oColLead     = 0;
    var oColSales    = 0;
    var oColBet      = 0; 
    var oAmt         = 0;
    var flg          = 0;

    for (var i = 0; i < tuples.length; i++) {
      var oCategory  = tuples[i][0];  
      var oCount     = tuples[i][1];
      var oOwner     = oCount['leadOwner'];  
      if( oOwner == oLOwner[k]){  
        if(flg == 0 && pr == 0){
          pr = 1;
          oData += '|**'+oLOwner[k]+'**|&nbsp;|&nbsp;|&nbsp;|<br>';
          flg = 1;
        } 
        else if(flg == 0 && pr == 1){
          oData += '|-|&nbsp;|&nbsp;|&nbsp;|<br>';
          oData += '|**'+oLOwner[k]+'**|&nbsp;|&nbsp;|&nbsp;|<br>';
          flg = 1;
        } 
        var oRec       = oCount["val"].split('-');   
        oAmt           = parseFloat(oRec[2]);
        oData         += '|'+oCategory +'|';
        oData         += oRec[0]+'|'; 
        oData         += oRec[1]+'|'; 
        oData         += currencyFormat(oAmt)+'|'; 
        oData         += '<br>';
    
        oColLead      += parseInt(oRec[0]);
        oColSales     += parseInt(oRec[1]);
        oColBet       += parseFloat(oRec[2]);         
      }      
    }
    if(flg == 1){
      var oShowColBet = currencyFormat(oColBet);
      oData          += '|**Gesamt :**|';
      oData          += '**'+oColLead +'**|'; 
      oData          += '**'+oColSales +'**|'; 
      oData          += '**'+oShowColBet +'**|<br>'; 
   
      oLeadsTotal +=oColLead;
      oSalesTotal +=oColSales;
      oAmtTotal   +=oColBet;
    }
  } 
   var oShowTotalAmt = currencyFormat(oAmtTotal);
   oData          += '|**Gross Total :**|';
   oData          += '**'+oLeadsTotal+'**|'; 
   oData          += '**'+oSalesTotal+'**|'; 
   oData          += '**'+oShowTotalAmt+'**|<br>'; 
}  

function getDetails(jsn){
  var oDataArr       = [];
  for(var i=0; i<jsn.length; i++){
    var jsArr        = JSON.parse(jsn[i]);            
    if( jsArr['Datam'] ){      
       var oCategory = jsArr['category']||'';
       var oDt       = new Date(jsArr['Datam']);
       var oW        = parseInt(getWeekNumber(oDt));

       if(parseInt(oWeeks) == oW){
         if(oCategory != ""){
           var tempKey = oCategory; 
           if(oItems[tempKey]){
             var arr           = oItems[tempKey];
             var sArr          = arr["val"].split('-');
             var oVal          = parseInt(sArr[0]) + 1;
             arr["val"]        = oVal+'-'+sArr[1]+'-'+sArr[2]; 
             oItems[tempKey]   = arr;                       
           } 
           else{
             var ind = -1;
             if(sortOrderArr[oCategory]> -1 ){
               ind = sortOrderArr[oCategory];
             }
             else{
               ind = oArrSize;
             }
             var arr = [];
             arr["val"]        = '1-0-0'; 
             arr["sortOrder"]  =  ind;
             arr["leadOwner"]  = jsArr['leadsOwner'];
             oItems[tempKey]   =  arr;
             if(oLOwner.length > 0){    
               if(oLOwner.indexOf(jsArr['leadsOwner']) == -1){
                 oLOwner.push(jsArr['leadsOwner']); 
               }  
             } 
             else{
              oLOwner.push(jsArr['leadsOwner']); 
            } 
          } 
        }                   
      }
    }
  }
}


function getDetails2(jsn){
  for(var i=0; i<jsn.length; i++){
    var jsArr = JSON.parse(jsn[i]);            
    if(jsArr['Auftragsdatum'] && (jsArr['Status'] == 'Auftrag' ||
       jsArr['Status'] == 'Auftragsbearbeitung abgeschlossen' )){      
       var oCategory = jsArr['category']||'';
       var oDt       = new Date(jsArr['Auftragsdatum']);
       var oW        = parseInt(getWeekNumber(oDt));
       var oAmount   = parseFloat(jsArr['Amount']||0).toFixed(2);      

       if(parseInt(oWeeks) == oW){
         if(oCategory != ""){
           var tempKey = oCategory; 
           if(oItems[tempKey]){          
             var arr           = oItems[tempKey];
             var sArr          = arr["val"].split('-');
             var oVal          = parseInt(sArr[1]) + 1;
             arr["val"]        = sArr[0]+'-'+oVal+'-'+sArr[2];       
             oItems[tempKey]   = arr;                    
           } 
           else{
             var ind = -1;
             if(sortOrderArr[oCategory]> -1 ){
               ind = sortOrderArr[oCategory];
             }
             else{
               ind = oArrSize;
             }
             var arr = [];
             arr["val"]        = '0-1-0';
             arr["sortOrder"]  =  ind;
             arr["leadOwner"]  = jsArr['leadsOwner'];
             oItems[tempKey]   =  arr;
             if(oLOwner.length > 0){    
               if(oLOwner.indexOf(jsArr['leadsOwner']) == -1){
                 oLOwner.push(jsArr['leadsOwner']); 
               }  
             } 
             else{
              oLOwner.push(jsArr['leadsOwner']); 
            } 
          }
        } 
      }                   
    }
  }
}


function getDetails3(jsn){
  for(var i=0; i<jsn.length; i++){
    var jsArr = JSON.parse(jsn[i]);            
    if(jsArr['Auftragsdatum'] && (jsArr['Status'] == 'Auftrag' ||
       jsArr['Status'] == 'Auftragsbearbeitung abgeschlossen' )){      
       var oCategory = jsArr['category']||'';
       var oDt       = new Date(jsArr['Auftragsdatum']);
       var oW        = parseInt(getWeekNumber(oDt));
       var oAmount   = parseFloat(jsArr['Amount']||0).toFixed(2);      

       if(parseInt(oWeeks) == oW){
         if(oCategory != ""){
           var tempKey = oCategory; 
           if(oItems[tempKey]){          
             var arr           = oItems[tempKey];
             var sArr          = arr["val"].split('-');
             var oVal          = parseFloat(sArr[2]) + parseFloat(oAmount);
             arr["val"]        = sArr[0]+'-'+sArr[1]+'-'+oVal;     
             oItems[tempKey]   = arr;                    
           } 
           else{
             var ind = -1;
             if(sortOrderArr[oCategory]> -1 ){
               ind = sortOrderArr[oCategory];
             }
             else{
               ind = oArrSize;
             }
             var arr = [];
             arr["val"]        = '0-0-'+oAmount; 
             arr["sortOrder"]  =  ind;
             arr["leadOwner"]  = jsArr['leadsOwner'];
             oItems[tempKey]   =  arr;
             if(oLOwner.length > 0){    
               if(oLOwner.indexOf(jsArr['leadsOwner']) == -1){
                 oLOwner.push(jsArr['leadsOwner']); 
               }  
             } 
             else{
              oLOwner.push(jsArr['leadsOwner']); 
            } 
          }
        } 
      }                   
    }
  }
}


function currencyFormat(num) {
    return num
       .toFixed(2)
       .replace(".", ",") 
       .replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.") + " €"; 
}

function getWeekNumber(t) {
  var date = new Date(t.getTime());
   date.setHours(0, 0, 0, 0);
 
  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
 
  var week1 = new Date(date.getFullYear(), 0, 4);
 
  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000- 3 + (week1.getDay() + 6) % 7) / 7);
}


/*if(oData){
  oShow = outputHeader + oData;
}*/
oShow = oData;
oShow+' ';
